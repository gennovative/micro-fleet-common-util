{"version":3,"sources":["app/HandlerContainer.ts"],"names":[],"mappings":"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","file":"HandlerContainer.js","sourcesContent":["import { IDependencyContainer } from './DependencyContainer';\r\nimport { Guard } from './Guard';\r\n\r\n\r\nexport type ActionFactory = (obj, action: string) => Function;\r\n\r\nexport type HandlerDetails = {\r\n\tdependencyIdentifier: string | symbol;\r\n\tactionFactory?: ActionFactory;\r\n};\r\n\r\nexport class HandlerContainer {\r\n\tprivate static _instance: HandlerContainer;\r\n\r\n\tpublic static get instance(): HandlerContainer {\r\n\t\tif (!this._instance) {\r\n\t\t\tthis._instance = new HandlerContainer();\r\n\t\t}\r\n\t\treturn this._instance;\r\n\t}\r\n\r\n\r\n\tprivate _handlers: HandlerDetails[];\r\n\tprivate _depContainer: IDependencyContainer;\r\n\t\r\n\r\n\tprivate constructor() {\r\n\t\tthis._handlers = [];\r\n\t}\r\n\r\n\r\n\tpublic set dependencyContainer(container: IDependencyContainer) {\r\n\t\tGuard.assertArgDefined('container', container);\r\n\t\tthis._depContainer = container;\r\n\t}\r\n\t\r\n\tpublic get dependencyContainer(): IDependencyContainer {\r\n\t\treturn this._depContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all registered handlers\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tthis._handlers = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Binds an action or some actions to a `dependencyIdentifier`, which is resolved to an object instance.\r\n\t * Returns a/some proxy function(s) which when called, will delegates to the actual resolved function.\r\n\t * \r\n\t * @param {string} actions Function name of the resolved object.\r\n\t * @param {string | symbol} dependencyIdentifier Key to look up and resolve from dependency container.\r\n\t * @param {ActionFactory} actionFactory A function that use `actions` name to produce the actual function to be executed.\r\n\t */\r\n\tpublic register(actions: string | string[], dependencyIdentifier: string | symbol, actionFactory?: ActionFactory): Function & Function[] {\r\n\t\tGuard.assertArgDefined('action', actions);\r\n\t\tGuard.assertArgDefined('dependencyIdentifier', dependencyIdentifier);\r\n\r\n\t\tlet fn = function(act: string): Function {\r\n\t\t\tthis._handlers[act] = { dependencyIdentifier, actionFactory };\r\n\t\t\tlet proxy = (function(action: string, context: HandlerContainer) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\treturn context.resolve(action).apply(null, arguments);\r\n\t\t\t\t\t};\r\n\t\t\t\t})(act, this);\r\n\t\t\treturn proxy;\r\n\t\t}.bind(this);\r\n\r\n\t\tif (Array.isArray(actions)) {\r\n\t\t\treturn <any>actions.map(fn);\r\n\t\t} else {\r\n\t\t\treturn fn(actions);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Looks up and returns a function that was registered to bind with `action`.\r\n\t * @param action Key to look up.\r\n\t */\r\n\tpublic resolve(action: string): Function {\r\n\t\tGuard.assertIsDefined(this._depContainer, `Dependency container is not set!`);\r\n\t\tlet detail: HandlerDetails = this._handlers[action];\r\n\t\tGuard.assertIsDefined(detail, `Action \"${action}\" was not registered!`);\r\n\t\treturn this.resolveActionFunc(action, detail.dependencyIdentifier, detail.actionFactory);\r\n\t}\r\n\r\n\r\n\tprivate resolveActionFunc(action: string, depId: string | symbol, actFactory: ActionFactory): Function {\r\n\t\t// Attempt to resolve object instance\r\n\t\tlet instance = this.dependencyContainer.resolve<any>(depId);\r\n\t\tGuard.assertIsDefined(instance, `Cannot resolve dependency \"${depId.toString()}\"!`);\r\n\r\n\t\tlet actionFn = instance[action];\r\n\t\t\r\n\t\t// If default action is not available, attempt to get action from factory.\r\n\t\tif (!actionFn) {\r\n\t\t\tactionFn = (actFactory ? actFactory(instance, action) : null);\r\n\t\t}\r\n\r\n\t\tGuard.assertIsDefined(actionFn, `Action \"${action}\" does not exist in object \"${depId.toString()}\"!`);\r\n\r\n\t\treturn actionFn.bind(instance);\r\n\t}\r\n}"]}